--- sum ---

goal:
   0 1 
00 0 1
01 1 0
11 0 1
10 1 0

solution:
(in0 ∧ in1 ∧ carry_in) ∨ (in0 ∧ ¬in1 ∧ ¬carry_in) ∨ (¬in0 ∧ in1 ∧ ¬carry_in) ∨ (¬in0 ∧ ¬in1 ∧ carry_in)

Gate cost: NOTs = 6, ANDs = 8, ORs = 3


--- carry_out ---

goal:
   0 1 
00 0 0
01 0 1
11 1 1
10 0 1

solution:
(in0 ∧ in1) ∨ (in0 ∧ carry_in) ∨ (in1 ∧ carry_in)

Gate cost: NOTs = 0, ANDs = 3, ORs = 2


=== optimized solution ===

Negated inputs: in0, in1, carry_in
Products:
	[0] = ¬in0 ∧ ¬in1 ∧ carry_in
	[1] = ¬in0 ∧ in1 ∧ ¬carry_in
	[2] = in0 ∧ ¬in1 ∧ ¬carry_in
	[3] = in1 ∧ carry_in
	[4] = in0 ∧ carry_in
	[5] = in0 ∧ in1
	[6] = in0 ∧ [3]
Sums:
	"sum" = [0] ∨ [1] ∨ [2] ∨ [6]
	"carry_out" = [3] ∨ [4] ∨ [5]

Gate cost: NOTs = 3, ANDs = 10, ORs = 5
