class tricky_one
{
public:
    using input_t = struct { bool a, b, c, d; };
    using output_t = struct { bool tricky_0, tricky_1; };
    
    [[nodiscard]] constexpr output_t operator()(const bool a, const bool b, const bool c, const bool d) const { return (*this)({a, b, c, d}); }
    [[nodiscard]] constexpr output_t operator()(const input_t &i) const { return calc(i); }
    
    [[nodiscard]] static constexpr output_t calc(const bool a, const bool b, const bool c, const bool d) { return calc({a, b, c, d}); }
    [[nodiscard]] static constexpr output_t calc(const input_t &i);
};

constexpr tricky_one::output_t tricky_one::calc(const input_t &i)
{
    output_t o = {};
    o.tricky_0 = (!i.a && !i.c) || (i.a && i.b && i.d);
    o.tricky_1 = (i.a && i.b) || (i.b && i.d);
    return o;
}
