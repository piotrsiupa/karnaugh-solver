digraph tricky_one
{
	subgraph inputs
	{
		rank=same;
		node [shape=house];
		i0 [label="a"];
		i1 [label="b"];
		i2 [label="c"];
		i3 [label="d"];
	}
	subgraph negated_inputs
	{
		node [shape=diamond];
		edge [taillabel="!"];
		ni0 [label="!a"];
		ni0 -> i0;
		ni2 [label="!c"];
		ni2 -> i2;
	}
	subgraph products
	{
		node [shape=ellipse];
		edge [taillabel="&&"];
		s0 [label="[0] = a && b"];
		s0 -> i0, i1;
		s1 [label="[1] = a && b && d"];
		s1 -> i3, s0;
		s2 [label="[2] = !a && !c"];
		s2 -> ni0, ni2;
	}
	subgraph final_sums
	{
		node [shape=rectangle, style=filled];
		edge [taillabel="||"];
		f0 [label="tricky_0 = (a && b && d) || (!a && !c)"];
		f0 -> s1, s2;
		f1 [label="tricky_1 = (a && b) || (!a && !c)"];
		f1 -> s0, s2;
	}
}
