a,b,c,d
# I would need to dive deep into the implementation to try to explain why,
# but this example seems to be particularly hard for solvers to get right.
# Solvers tend to get a solution along the lines of a'b'd' + bc'd,
# insted of the optimal solution: a'c' + abd. (1 less AND and 2 less NOTs)
tricky_0
0,5,13
1,2,4,15
# This one is tricky for 2 reasons:
# Solvers tend to not be biased agains using not gates which often results in
# a'c' + ac, instead of bd + ab. (2 less NOTs)
# Beside that, this solution can reause some of the previous one reducing the
# amount of gates even further. (2 less ANDs)
tricky_1
5,14
0,1,3,4,7,10,11,12,13,15
