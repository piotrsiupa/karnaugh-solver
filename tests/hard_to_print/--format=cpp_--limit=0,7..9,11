class hard_to_print
{
public:
	using input_t = struct { bool q, x, y, z; };
	using output_t = struct { bool none, some_again, more_than_less_again, half, more_than_less_the_third_time; };
	
	[[nodiscard]] constexpr output_t operator()(const bool q, const bool x, const bool y, const bool z) const { return (*this)({q, x, y, z}); }
	[[nodiscard]] constexpr output_t operator()(const input_t &i) const { return calc(i); }
	
	[[nodiscard]] static constexpr output_t calc(const bool q, const bool x, const bool y, const bool z) { return calc({q, x, y, z}); }
	[[nodiscard]] static constexpr output_t calc(const input_t &i);
};

constexpr hard_to_print::output_t hard_to_print::calc(const input_t &i)
{
	// Intermediary values
	bool prods[2] = {};
	bool sums[1] = {};
	
	// Products
	prods[0] = !i.q && !i.x;
	prods[1] = !i.y && prods[0];
	
	// Sums
	sums[0] = prods[1] || !i.z;
	
	// Results
	output_t o = {};
	o.none = false;
	o.some_again = prods[0];
	o.more_than_less_again = sums[0];
	o.half = !i.z;
	o.more_than_less_the_third_time = sums[0];
	return o;
}
