digraph very_optimizable
{
	subgraph inputs
	{
		rank=same;
		node [shape=invhouse];
		i0 [label="a"];
		i1 [label="b"];
		i2 [label="c"];
		i3 [label="d"];
	}
	subgraph function_2
	{
		subgraph negated_inputs
		{
			node [shape=diamond];
			f2_ni0_1 [label="¬a"];
			i0 -> f2_ni0_1;
			f2_ni0_2 [label="¬a"];
			i0 -> f2_ni0_2;
			f2_ni1_0 [label="¬b"];
			i1 -> f2_ni1_0;
			f2_ni2_0 [label="¬c"];
			i2 -> f2_ni2_0;
			f2_ni2_2 [label="¬c"];
			i2 -> f2_ni2_2;
			f2_ni3_1 [label="¬d"];
			i3 -> f2_ni3_1;
		}
		subgraph products
		{
			node [shape=ellipse];
			f2_s0 [label="∧\n[8] = a ∧ ¬b ∧ ¬c ∧ d"];
			i0, f2_ni1_0, f2_ni2_0, i3 -> f2_s0;
			f2_s1 [label="∧\n[9] = ¬a ∧ b ∧ c ∧ ¬d"];
			f2_ni0_1, i1, i2, f2_ni3_1 -> f2_s1;
			f2_s2 [label="∧\n[10] = ¬a ∧ b ∧ ¬c ∧ d"];
			f2_ni0_2, i1, f2_ni2_2, i3 -> f2_s2;
		}
		subgraph sum
		{
			node [shape=rectangle, style=filled];
			f2 [label="∨\nthird = (a ∧ ¬b ∧ ¬c ∧ d) ∨ (¬a ∧ b ∧ c ∧ ¬d) ∨ (¬a ∧ b ∧ ¬c ∧ d)"];
			f2_s0, f2_s1, f2_s2 -> f2;
		}
	}
}
