class very_optimizable
{
public:
	using input_t = struct { bool a, b, c, d; };
	using output_t = struct { bool fourth; };
	
	[[nodiscard]] constexpr output_t operator()(const bool a, const bool b, const bool c, const bool d) const { return (*this)({a, b, c, d}); }
	[[nodiscard]] constexpr output_t operator()(const input_t &i) const { return calc(i); }
	
	[[nodiscard]] static constexpr output_t calc(const bool a, const bool b, const bool c, const bool d) { return calc({a, b, c, d}); }
	[[nodiscard]] static constexpr output_t calc(const input_t &i);
};

constexpr very_optimizable::output_t very_optimizable::calc(const input_t &i)
{
	output_t o = {};
	o.fourth = (i.a && !i.b && !i.c && i.d) || (!i.a && i.b && i.c && !i.d) || (!i.a && !i.b && !i.c && !i.d);
	return o;
}
