digraph very_optimizable
{
	subgraph inputs
	{
		rank=same;
		node [shape=invhouse];
		i0 [label="a"];
		i1 [label="b"];
		i2 [label="c"];
		i3 [label="d"];
	}
	subgraph function_0
	{
		subgraph negated_inputs
		{
			node [shape=diamond];
			f0_ni0_2 [label="¬a"];
			i0 -> f0_ni0_2;
			f0_ni0_3 [label="¬a"];
			i0 -> f0_ni0_3;
			f0_ni1_0 [label="¬b"];
			i1 -> f0_ni1_0;
			f0_ni1_1 [label="¬b"];
			i1 -> f0_ni1_1;
			f0_ni2_1 [label="¬c"];
			i2 -> f0_ni2_1;
			f0_ni2_3 [label="¬c"];
			i2 -> f0_ni2_3;
			f0_ni3_0 [label="¬d"];
			i3 -> f0_ni3_0;
			f0_ni3_2 [label="¬d"];
			i3 -> f0_ni3_2;
		}
		subgraph products
		{
			node [shape=ellipse];
			f0_s0 [label="∧\n[0]"];
			i0, f0_ni1_0, i2, f0_ni3_0 -> f0_s0;
			f0_s1 [label="∧\n[1]"];
			i0, f0_ni1_1, f0_ni2_1, i3 -> f0_s1;
			f0_s2 [label="∧\n[2]"];
			f0_ni0_2, i1, i2, f0_ni3_2 -> f0_s2;
			f0_s3 [label="∧\n[3]"];
			f0_ni0_3, i1, f0_ni2_3, i3 -> f0_s3;
		}
		subgraph sum
		{
			node [shape=rectangle, style=filled];
			f0 [label="∨\nfirst"];
			f0_s0, f0_s1, f0_s2, f0_s3 -> f0;
		}
	}
	subgraph function_1
	{
		subgraph negated_inputs
		{
			node [shape=diamond];
			f1_ni0_2 [label="¬a"];
			i0 -> f1_ni0_2;
			f1_ni0_3 [label="¬a"];
			i0 -> f1_ni0_3;
			f1_ni1_1 [label="¬b"];
			i1 -> f1_ni1_1;
			f1_ni2_1 [label="¬c"];
			i2 -> f1_ni2_1;
			f1_ni2_3 [label="¬c"];
			i2 -> f1_ni2_3;
			f1_ni3_2 [label="¬d"];
			i3 -> f1_ni3_2;
		}
		subgraph products
		{
			node [shape=ellipse];
			f1_s0 [label="∧\n[4]"];
			i0, i1, i2, i3 -> f1_s0;
			f1_s1 [label="∧\n[5]"];
			i0, f1_ni1_1, f1_ni2_1, i3 -> f1_s1;
			f1_s2 [label="∧\n[6]"];
			f1_ni0_2, i1, i2, f1_ni3_2 -> f1_s2;
			f1_s3 [label="∧\n[7]"];
			f1_ni0_3, i1, f1_ni2_3, i3 -> f1_s3;
		}
		subgraph sum
		{
			node [shape=rectangle, style=filled];
			f1 [label="∨\nsecond"];
			f1_s0, f1_s1, f1_s2, f1_s3 -> f1;
		}
	}
	subgraph function_2
	{
		subgraph negated_inputs
		{
			node [shape=diamond];
			f2_ni0_1 [label="¬a"];
			i0 -> f2_ni0_1;
			f2_ni0_2 [label="¬a"];
			i0 -> f2_ni0_2;
			f2_ni1_0 [label="¬b"];
			i1 -> f2_ni1_0;
			f2_ni2_0 [label="¬c"];
			i2 -> f2_ni2_0;
			f2_ni2_2 [label="¬c"];
			i2 -> f2_ni2_2;
			f2_ni3_1 [label="¬d"];
			i3 -> f2_ni3_1;
		}
		subgraph products
		{
			node [shape=ellipse];
			f2_s0 [label="∧\n[8]"];
			i0, f2_ni1_0, f2_ni2_0, i3 -> f2_s0;
			f2_s1 [label="∧\n[9]"];
			f2_ni0_1, i1, i2, f2_ni3_1 -> f2_s1;
			f2_s2 [label="∧\n[10]"];
			f2_ni0_2, i1, f2_ni2_2, i3 -> f2_s2;
		}
		subgraph sum
		{
			node [shape=rectangle, style=filled];
			f2 [label="∨\nthird"];
			f2_s0, f2_s1, f2_s2 -> f2;
		}
	}
	subgraph function_3
	{
		subgraph negated_inputs
		{
			node [shape=diamond];
			f3_ni0_1 [label="¬a"];
			i0 -> f3_ni0_1;
			f3_ni0_2 [label="¬a"];
			i0 -> f3_ni0_2;
			f3_ni1_0 [label="¬b"];
			i1 -> f3_ni1_0;
			f3_ni1_2 [label="¬b"];
			i1 -> f3_ni1_2;
			f3_ni2_0 [label="¬c"];
			i2 -> f3_ni2_0;
			f3_ni2_2 [label="¬c"];
			i2 -> f3_ni2_2;
			f3_ni3_1 [label="¬d"];
			i3 -> f3_ni3_1;
			f3_ni3_2 [label="¬d"];
			i3 -> f3_ni3_2;
		}
		subgraph products
		{
			node [shape=ellipse];
			f3_s0 [label="∧\n[11]"];
			i0, f3_ni1_0, f3_ni2_0, i3 -> f3_s0;
			f3_s1 [label="∧\n[12]"];
			f3_ni0_1, i1, i2, f3_ni3_1 -> f3_s1;
			f3_s2 [label="∧\n[13]"];
			f3_ni0_2, f3_ni1_2, f3_ni2_2, f3_ni3_2 -> f3_s2;
		}
		subgraph sum
		{
			node [shape=rectangle, style=filled];
			f3 [label="∨\nfourth"];
			f3_s0, f3_s1, f3_s2 -> f3;
		}
	}
}
