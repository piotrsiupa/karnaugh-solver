digraph very_optimizable
{
	subgraph inputs
	{
		rank=same;
		node [shape=house];
		i0 [label="a"];
		i1 [label="b"];
		i2 [label="c"];
		i3 [label="d"];
	}
	subgraph negated_inputs
	{
		node [shape=diamond];
		edge [taillabel="!"];
		ni0 [label="!a"];
		ni0 -> i0;
		ni1 [label="!b"];
		ni1 -> i1;
		ni2 [label="!c"];
		ni2 -> i2;
		ni3 [label="!d"];
		ni3 -> i3;
	}
	subgraph products
	{
		node [shape=ellipse];
		edge [taillabel="&&"];
		s0 [label="[0] = a && b && c && d"];
		s0 -> i0, i1, i2, i3;
		s1 [label="[1] = !c && d"];
		s1 -> ni2, i3;
		s2 [label="[2] = !a && b"];
		s2 -> ni0, i1;
		s3 [label="[3] = !a && b && !c && d"];
		s3 -> s2, s1;
		s4 [label="[4] = c && !d"];
		s4 -> i2, ni3;
		s5 [label="[5] = !a && b && c && !d"];
		s5 -> s2, s4;
		s6 [label="[6] = a && !b"];
		s6 -> i0, ni1;
		s7 [label="[7] = a && !b && !c && d"];
		s7 -> s1, s6;
		s8 [label="[8] = a && !b && c && !d"];
		s8 -> s4, s6;
		s9 [label="[9] = !a && !b && !c && !d"];
		s9 -> ni0, ni1, ni2, ni3;
	}
	subgraph sums
	{
		node [shape=rectangle];
		edge [taillabel="||"];
		s10 [label="[10] = (!a && b && c && !d) || (a && !b && !c && d)"];
		s10 -> s5, s7;
		s11 [label="[11] = (!a && b && !c && d) || (!a && b && c && !d) || (a && !b && !c && d)"];
		s11 -> s3, s10;
	}
	subgraph final_sums
	{
		node [shape=rectangle, style=filled];
		edge [taillabel="||"];
		f0 [label="first = (a && !b && c && !d) || (!a && b && !c && d) || (!a && b && c && !d) || (a && !b && !c && d)"];
		f0 -> s8, s11;
		f1 [label="second = (a && b && c && d) || (!a && b && !c && d) || (!a && b && c && !d) || (a && !b && !c && d)"];
		f1 -> s0, s11;
		f2 [label="third = (!a && b && !c && d) || (!a && b && c && !d) || (a && !b && !c && d)"];
		f2 -> s11;
		f3 [label="fourth = (!a && !b && !c && !d) || (!a && b && c && !d) || (a && !b && !c && d)"];
		f3 -> s9, s10;
	}
}
